

#unpack("U4U2U2*38U2U2R4I2*9R4R4R4x6a4", "atm05555.dat", 390)
#unpack("U4U2U2U4UU2UaaaaaaaUUx8U2*4U", "obs05555.dat",420)
#unpack("Iu2i3u4r4r8x4I2I3U4R4R8a5", "mytestfile.dat", 0)
#unpack("Iu2i3u4r4r8x4U2U3U4R4R8a5", "secondtest.dat", 0)
#unpack("Iu2i3u4r4r8x4U2U3U4R4R8a6*3", "strmulttest.dat", 0)

# NOTE(rswinkle): Unlike unpack,
# pack doesn't support 3 byte types, probably no reason to add it
# since it's just extra work to write out non word/type aligned
# integer data.  This means I had to change the template strings
# below from the originals above, besides removing the ignore
# sections, I changed 3 byte types to 4.

# NOTE(rswinkle): it seems pack will pack structures with members
# with differing y lengths and will just pad those columns with
# 00's so the file will be the size in bytes of the first row
# times the number of rows (y length) of the longest column.
#
# Maybe I should add a test for that but it seems like a rare
# thing and unpack has no way of knowing what the different lengths
# were or how to differentiate a real 0 from a padded 0.


atm = load("atm.hdf");
pack(atm, "U4U2U2*38U2U2R4I2*9R4R4R4a4", "atm_packed.dat")
atm_in = unpack("U4U2U2*38U2U2R4I2*9R4R4R4a4", "atm_packed.dat")
if (equals(atm, atm_in) == 0) exit(1);

fremove("atm_packed.dat")
printf("atm succeeded\n")

obs = load("obs.hdf");
pack(obs, "U4U2U2U4UU2UaaaaaaaUUU2*4U", "obs_packed.dat")
obs_in = unpack("U4U2U2U4UU2UaaaaaaaUUU2*4U", "obs_packed.dat")
if (equals(obs, obs_in) == 0) exit(1);

fremove("obs_packed.dat")
printf("obs succeeded\n")

t1 = load("mytestfile.hdf");
pack(t1, "Iu2i4u4r4r8I2I4U4R4R8a5", "mytestfile_packed.dat")
t1_in = unpack("Iu2i4u4r4r8I2I4U4R4R8a5", "mytestfile_packed.dat")
if (equals(t1, t1_in) == 0) exit(1);

fremove("mytestfile_packed.dat")
printf("mytestfile succeeded\n")

t2 = load("secondtest.hdf");
pack(t2, "Iu2i4u4r4r8U2U4U4R4R8a5", "secondtest_packed.dat", 0)
t2_in = unpack("Iu2i4u4r4r8U2U4U4R4R8a5", "secondtest_packed.dat", 0)
if (equals(t2, t2_in) == 0) exit(1);

fremove("secondtest_packed.dat")
printf("secondtest succeeded\n")

t3 = load("strmulttest.hdf");
pack(t3, "Iu2i4u4r4r8U2U4U4R4R8a6*3", "strmulttest_packed.dat")
t3_in = unpack("Iu2i4u4r4r8U2U4U4R4R8a6*3", "strmulttest_packed.dat")
if (equals(t3, t3_in) == 0) exit(1);

fremove("strmulttest_packed.dat")
printf("strmulttest succeeded\n")

exit(0);



