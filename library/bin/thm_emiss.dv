#!/mars/common/bin/davinci -fq -v0
source("/themis/lib/dav_lib/library/library_mars.dvrc")


##
##
######################## thm_emiss.dv #######################
#
# This script will compute emissivity and surface tempeature from 
# a projected ISIS3 THEMIS cube
#
# usage: thm_emiss.dv input_file output_file [tsurf] [geotiff] [b1] [b2]
#
# Modification History
# --------------------
#
# 2015-03-04 - C. Edwards made portable for distribution
#
##########################################################################
##
##

opt={\
from="",\
to="",\
tsurf=0,\
geotiff=0,\
b1=3,\
b2=9\
};
opt=getopt($ARGV,opt)

if(opt.from=="" || opt.to=="") {
  printf("\nPerform a temperature emissivity separation on a THEMIS ISIS3 cube\n\n")
	printf("Arguments:\n")
  printf("\tfrom = input THEMIS ISIS3 filename\n")
  printf("\tto = output THEMIS ISIS3\n")
  printf("\ttsurf = output the surface temperature (0=no, default; 1=yes)\n")
	printf("\tgeotiff = output a geotiff (0=no, default; 1=yes)\n")
	printf("\tb1 = start band for brightness temperature calcuation (default=3)\n")
	printf("\tb2 = end band for brightness temperature calcuation (default=9)\n\n")
	printf("Major Sub-Functions:\n")
  printf("\temissivity()\n\n")
  printf("Script Contributors:\n")
  printf("C. Edwards, P.Christensen, 3/4/15\n\n")
  exit(0)
}

ignore=-32768
printf("\nSelected options:\n")
opt_usage(opt)
printf("\n")

insmod("isis3")
if(lsmod("isis3")==0) {
  printf("This script requires the davinci ISIS3 I/O module\n")
  exit(0)
}

verbose=0

#load the data and extract the bands
data = load_pds(opt.from)

#compute the emissivity
printf("\nSeparating Emissivity and Temperature\n")
emiss = emissivity(data.cube,inst='themis',data.IsisCube.BandBin.FilterNumber,b1=opt.b1,b2=opt.b2)
data.cube=emiss.emissivity

#write the isis3 cube
printf("Writing ISIS3 output: %s\n",opt.to)
write(data,opt.to,isis3,force=1)

#write out a geotiff
if(opt.geotiff==1) write_geotiff(read_geo(opt.to),dirname(opt.to)+"/"+basename(opt.to,".cub")+".tiff",force=1)

#if we also want to output the target temperature, reset the data and add .tsurf to the name
if(opt.tsurf==1) {
	data.cube=emiss.target_temperature
	outname=dirname(opt.to)+"/"+basename(opt.to,".cub")+".tsurf.cub"

	printf("\nWriting ISIS3 output: %s\n",outname)
	write(data,outname,isis3,force=1)

	if(opt.geotiff==1) write_geotiff(read_geo(outname),dirname(outname)+"/"+basename(outname,".cub")+".tiff",force=1)
}

exit(0);
